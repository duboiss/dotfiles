[user]
	name = Steven DUBOIS
	email = git@duboiss.fr
	signingkey = 35D929498C6C0DE8

[core]
	autocrlf = input
	excludesfile = ~/.gitignore

[commit]
	#gpgsign = true

[init]
	defaultBranch = master

[alias]
	aliases = config --get-regexp alias
	ba = branch --all # branch all, list local and remote branches
	bd = branch -D # branch delete, delete the given branch even if it contains unmerged commits
	bip = for-each-ref --sort='authordate:iso8601' --format='%(color:green)%(authordate:relative)%09%(color:yellow)%(refname:short)%(color:white) / %(color:yellow)%(objectname:short) %(color:white)%(contents:subject)' refs/heads
	bl = branch --sort=-committerdate -vv # list local branches sorted in descending order based on the latest commit date
	br = branch -m # branch rename, rename the branch in first argument with the value of the second argument
	clb = clone -b
	conflicts = diff --name-only --diff-filter=U
	deindex = restore --worktree
	deindexall = restore --worktree .
	difff = diff ':(exclude)composer.lock' ':(exclude)package-lock.json' ':(exclude)yarn.lock'
	graph = log --graph --pretty=format:'%C(auto)%h -%d %s %Cgreen(%cr) %Cblue<%an>%Creset'
	lo = log --oneline
	ln = log -n # git log with the given number of commits
	ls = log --stat
	m = switch master
	nuke =  !git clean -df && git reset --hard
	oops = commit --all --amend --no-edit
	pf = push --force-with-lease
	po = push origin
	rb = rebase origin/master
	remotes = remote -v
	sd = stash drop
	shoot = push origin --delete
	sl = stash list
	sp = stash pop
	ss = stash save -u
	st = status -s
	tags = tag -l
	undo = reset HEAD~1 --soft
	up = !sh -c 'git pull --rebase --prune --no-stat --autostash && git --no-pager log --reverse --pretty=format:\"%C(yellow)%h %Creset %s %Creset (%an)\" HEAD@{1}.. && echo ""'
	unstage = restore --staged # or reset HEAD <file> for git versions lower than 2.23
	unstageall = restore --staged . # or reset HEAD for git versions lower than 2.23
	untrack = rm --cached -r
	whoami = !git config user.name && git config user.email

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# Switch to a branch, creating it if necessary
	go = "!f() { git switch -c \"$1\" 2> /dev/null || git switch \"$1\"; }; f"

	# Delete merged branches
  	merged = "!f() { git branch --merged ${1:-master} | egrep -v \"(^\\*|${1:-master}|development|dev)\" | xargs git branch -d; };f"

	# Interactive rebase with the given number of latest commits
	rbi = "!r() { git rebase -i HEAD~$1; }; r"

[log]
	abbrevCommit = true

[diff]
	noprefix = true

[pager]
	branch = false
	diff = delta
	stash = false
	tag = false

[pull]
	rebase = true

[push]
	# https://pawelgrzybek.com/auto-setup-remote-branch-and-never-again-see-an-error-about-the-missing-upstream/
	autoSetupRemote = true

[rebase]
	autostash = true

# Custom plugins
[delta]
	syntax-theme = Nord
	plus-style = "#728562"
	minus-style = "#85434a"
    side-by-side = true

# Styling
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = red
	upstream = red

[color "status"]
	added = green
	changed = yellow
	untracked = red
